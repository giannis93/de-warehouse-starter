version: "3.9"                       # Docker Compose file format version

services:                            # Define services (containers to run)
  postgres:                          # First service: PostgreSQL database
    image: postgres:15               # Use official Postgres 15 image
    container_name: postgres_db      # Give the container a fixed name
    restart: always                  # Automatically restart if it fails
    env_file:                        # Load environment variables from file
      - ../.env                      # Path to .env file with DB credentials
    ports:
      - "5432:5432"                  # Map host port 5432 -> container port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist DB data to named volume
    healthcheck:                     # Define container healthcheck
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
                                      # Use pg_isready to check if Postgres is ready
      interval: 10s                  # Run healthcheck every 10 seconds
      retries: 5                     # Retry up to 5 times on failure
      timeout: 5s                    # Timeout for each check is 5 seconds

  adminer:                           # Second service: Adminer web UI for DB
    image: adminer:latest            # Use the latest Adminer image
    container_name: adminer_ui       # Give container a fixed name
    restart: always                  # Restart automatically if stopped
    ports:
      - "8080:8080"                  # Map host port 8080 -> container port 8080
    depends_on:                      # Wait for Postgres healthcheck OK before starting
      postgres:
        condition: service_healthy

volumes:                             # Define named volumes
  postgres_data:                     # Named volume for persisting Postgres storage
